name: CI Checks

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  #    paths:
  #      - cmd/**
  workflow_dispatch:
jobs:
  test:
    name: Test Application
    needs: vet
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Run Test
        run: make test
      - name: Coverage Check
        run: make coverage
      - name: Make report
        run: make report
      - name: Copy files
        run: |
          mkdir reports
          cp cover.html reports/.
      - name: Archive
        uses: actions/upload-artifact@v2
        with:
          name: reports
          path: reports
  build:
    name: Build App
    if: ${{github.event_name == 'push' && github.ref == 'refs/heads/main'}}
    runs-on: ubuntu-latest
    needs: test
    steps:

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Build
        run: make build

      - name: Copy Files
        run: |
          mkdir  artifacts
          cp api artifacts/.

      - name: Archive
        uses: actions/upload-artifact@v2
        with:
          name: api
          path: artifacts
  deliver:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    if: ${{github.event_name == 'push' && github.ref == 'refs/heads/main'}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download binary
        uses: actions/download-artifact@v2
        with:
          name: api
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{github.ref}}
          release_name: Release ${{github.ref}}
          body: |
            Still in experimental phase
          draft: true
          prerelease: true
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: api
          asset_name: api
          asset_content_type: application/octet-stream
  deploy-functions:
    name: Deploy Functions
    runs-on: ubuntu-latest
    needs: test
    # if: ${{github.event_name == 'push' && github.ref == 'refs/heads/main'}} # original
    if: ${{false}} # disable for now
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
      - name: Deploy function
        id: deploy
        uses: google-github-actions/deploy-cloud-functions@v1
        with:
          name: translate
          entry_point: Translate
          runtime: go113
      - id: test
        run: curl "${{ steps.deploy.outputs.url }}/translate/hello"
  deploy-app-engine:
    name: Deploy App Engine PaaS
    runs-on: ubuntu-latest
    needs: test
    if: ${{false}} # disable for now
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
      - name: Deploy App
        id: deploy
        uses: google-github-actions/deploy-appengine@v1
      - id: test
        run: curl "${{ steps.deploy.outputs.url }}/translate/hello"
  format-check:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Run Format Check
        run: make check-format
  vet:
    name: Check coding standard
    runs-on: ubuntu-latest
    needs: format-check
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Run Format Check
        run: make vet
